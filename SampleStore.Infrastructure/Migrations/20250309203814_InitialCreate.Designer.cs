// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SampleStore.Infrastructure.Persistence;

#nullable disable

namespace SampleStore.Infrastructure.Migrations
{
    [DbContext(typeof(SampleStoreDbContext))]
    [Migration("20250309203814_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SampleStore.Domain.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("ArticleType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Articles", (string)null);
                });

            modelBuilder.Entity("SampleStore.Domain.Entities.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Collections", (string)null);
                });

            modelBuilder.Entity("SampleStore.Infrastructure.Persistence.Entities.ArticleCollection", b =>
                {
                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uuid");

                    b.HasKey("ArticleId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("ArticleCollections", (string)null);
                });

            modelBuilder.Entity("SampleStore.Domain.Entities.Article", b =>
                {
                    b.OwnsOne("SampleStore.Domain.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ArticleId")
                                .HasColumnType("uuid");

                            b1.Property<decimal?>("DiscountedPrice")
                                .HasColumnType("numeric")
                                .HasColumnName("DiscountedPrice");

                            b1.Property<decimal>("OriginalPrice")
                                .HasColumnType("decimal(6, 2)");

                            b1.HasKey("ArticleId");

                            b1.ToTable("Articles");

                            b1.WithOwner()
                                .HasForeignKey("ArticleId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("SampleStore.Infrastructure.Persistence.Entities.ArticleCollection", b =>
                {
                    b.HasOne("SampleStore.Domain.Entities.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SampleStore.Domain.Entities.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Collection");
                });
#pragma warning restore 612, 618
        }
    }
}
